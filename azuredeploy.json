{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "ingressFunctionName": {
            "type": "string",
            "defaultValue": "http-ingress-func",
            "metadata": {
                "description": "Name of the ingress function app."
            }
        },
        "ingressSku": {
            "type": "string",
            "allowedValues": [
                "Free",
                "Shared",
                "Basic",
                "Standard"
            ],
            "defaultValue": "Standard",
            "metadata": {
                "description": "Pricing tier for dedicated plan."
            }
        },
        "ingressWorkerSize": {
            "type": "string",
            "allowedValues": [
                "0",
                "1",
                "2"
            ],
            "defaultValue": "2",
            "metadata": {
                "description": "Instance size of the dedicated plan (small, medium, or large)."
            }
        },
        "ingressNumberOfWorkers": {
            "type": "int",
            "minValue": 1,
            "maxValue": 20,
            "defaultValue": 10
        },
        "consumptionFunctionName": {
            "type": "string",
            "defaultValue": "consumption-func",
            "metadata": {
                "description": "Name of the Function App which operates on consumption plan"
            }
        },
        "cosmosDbAccountName": {
            "type": "string",
            "defaultValue": "azure-meetup-cosmosdb",
            "metadata": {
                "description": "Name of the Cosmos DB account"
            }
        },
        "storageAccountType": {
            "type": "string",
            "defaultValue": "Standard_LRS",
            "allowedValues": [
                "Standard_LRS",
                "Standard_GRS",
                "Standard_RAGRS"
            ],
            "metadata": {
                "description": "Storage Account type"
            }
        },
        "serviceBusNamespaceName": {
            "type": "string",
            "defaultValue": "azure-meetup-products",
            "metadata": {
                "description": "Name of the Service Bus namespace"
            }
        }
    },
    "variables": {
        "repoURL": "https://github.com/syedhassaanahmed/azure-event-driven-data-pipeline.git",
        "storageAccountName": "azfunctions",
        "storageAccountid": "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
        "cosmosDbId": "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbAccountName'))]",
        "serviceBusQueueName": "productsQueue",
        "authRuleResourceId": "[resourceId('Microsoft.ServiceBus/namespaces/authorizationRules', parameters('serviceBusNamespaceName'), 'RootManageSharedAccessKey')]"
    },
    "resources": [
        {
            "name": "[parameters('cosmosDbAccountName')]",
            "type": "Microsoft.DocumentDb/databaseAccounts",
            "apiVersion": "2016-03-31",
            "kind": "GlobalDocumentDB",
            "location": "[resourceGroup().location]",
            "properties": {
                "name": "[parameters('cosmosDbAccountName')]",
                "databaseAccountOfferType": "Standard"
            }
        },
        {
            "name": "[variables('storageAccountName')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2017-10-01",
            "location": "[resourceGroup().location]",
            "kind": "Storage",
            "sku": {
                "name": "[parameters('storageAccountType')]"
            }
        },
        {
            "apiVersion": "2017-04-01",
            "name": "[parameters('serviceBusNamespaceName')]",
            "type": "Microsoft.ServiceBus/Namespaces",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard"
            },
            "properties": {},
            "resources": [
                {
                    "apiVersion": "2017-04-01",
                    "name": "[variables('serviceBusQueueName')]",
                    "type": "Queues",
                    "dependsOn": [
                        "[concat('Microsoft.ServiceBus/namespaces/', parameters('serviceBusNamespaceName'))]"
                    ],
                    "properties": {
                        "requiresDuplicateDetection": "false",
                        "requiresSession": "false",
                        "enablePartitioning": "true",
                        "enableExpress": "true"
                    }
                }
            ]
        },
        {
            "name": "[parameters('ingressFunctionName')]",
            "type": "microsoft.insights/components",
            "apiVersion": "2015-05-01",
            "kind": "other",
            "location": "[resourceGroup().location]",
            "properties": {
                "ApplicationId": "[parameters('ingressFunctionName')]"
            }
        },
        {
            "name": "[parameters('consumptionFunctionName')]",
            "type": "microsoft.insights/components",
            "apiVersion": "2015-05-01",
            "kind": "other",
            "location": "[resourceGroup().location]",
            "properties": {
                "ApplicationId": "[parameters('consumptionFunctionName')]"
            }
        },
        {
            "name": "[parameters('ingressFunctionName')]",
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2015-04-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "name": "[parameters('ingressFunctionName')]",
                "sku": "[parameters('ingressSku')]",
                "workerSize": "[parameters('ingressWorkerSize')]",
                "hostingEnvironment": "",
                "numberOfWorkers": "[parameters('ingressNumberOfWorkers')]"
            }
        },
        {
            "name": "[parameters('ingressFunctionName')]",
            "type": "Microsoft.Web/sites",
            "apiVersion": "2016-08-01",
            "location": "[resourceGroup().location]",
            "kind": "functionapp",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('ingressFunctionName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                "[concat('Microsoft.ServiceBus/namespaces/', parameters('serviceBusNamespaceName'))]",
                "[resourceId('microsoft.insights/components', parameters('ingressFunctionName'))]"
            ],
            "resources": [
                {
                    "apiVersion": "2016-03-01",
                    "name": "web",
                    "type": "sourcecontrols",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/Sites', parameters('ingressFunctionName'))]"
                    ],
                    "properties": {
                        "RepoUrl": "[variables('repoURL')]",
                        "branch": "master",
                        "IsManualIntegration": true
                    }
                }
            ],
            "properties": {
                "name": "[parameters('ingressFunctionName')]",
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('ingressFunctionName'))]",
                "hostingEnvironment": "",
                "clientAffinityEnabled": false,
                "siteConfig": {
                    "alwaysOn": true,
                    "appSettings": [
                        {
                            "name": "AzureWebJobsDashboard",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2017-10-01').keys[0].value)]"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2017-10-01').keys[0].value)]"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~1"
                        },
                        {
                            "name": "AppInsights_InstrumentationKey",
                            "value": "[reference(concat('microsoft.insights/components/', parameters('ingressFunctionName'))).InstrumentationKey]"
                        },
                        {
                            "name": "PROJECT",
                            "value": "HttpIngressFunc/HttpIngressFunc.csproj"
                        },
                        {
                            "name": "SERVICEBUS_CONNECTION",
                            "value": "[listkeys(variables('authRuleResourceId'), '2017-04-01').primaryConnectionString]"
                        }
                    ]
                }
            }
        },
        {
            "name": "[parameters('consumptionFunctionName')]",
            "type": "Microsoft.Web/serverfarms",
            "apiVersion": "2015-04-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "name": "[parameters('consumptionFunctionName')]",
                "computeMode": "Dynamic",
                "sku": "Dynamic"
            }
        },
        {
            "name": "[parameters('consumptionFunctionName')]",
            "type": "Microsoft.Web/sites",
            "apiVersion": "2016-08-01",
            "location": "[resourceGroup().location]",
            "kind": "functionapp",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('consumptionFunctionName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
                "[concat('Microsoft.DocumentDb/databaseAccounts/', parameters('cosmosDbAccountName'))]",
                "[resourceId('microsoft.insights/components', parameters('consumptionFunctionName'))]"
            ],
            "resources": [
                {
                    "apiVersion": "2016-03-01",
                    "name": "web",
                    "type": "sourcecontrols",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/Sites', parameters('consumptionFunctionName'))]"
                    ],
                    "properties": {
                        "RepoUrl": "[variables('repoURL')]",
                        "branch": "master",
                        "IsManualIntegration": true
                    }
                }
            ],
            "properties": {
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('consumptionFunctionName'))]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "AzureWebJobsDashboard",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2017-10-01').keys[0].value)]"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2017-10-01').keys[0].value)]"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(variables('storageAccountid'),'2017-10-01').keys[0].value)]"
                        },
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~1"
                        },
                        {
                            "name": "AppInsights_InstrumentationKey",
                            "value": "[reference(concat('microsoft.insights/components/', parameters('consumptionFunctionName'))).InstrumentationKey]"
                        },
                        {
                            "name": "PROJECT",
                            "value": "ConsumptionFuncs/ConsumptionFuncs.csproj"
                        },
                        {
                            "name": "SERVICEBUS_CONNECTION",
                            "value": "[listkeys(variables('authRuleResourceId'), '2017-04-01').primaryConnectionString]"
                        },
                        {
                            "name": "COSMOSDB_ENDPOINT",
                            "value": "[reference(concat('Microsoft.DocumentDb/databaseAccounts/', parameters('cosmosDbAccountName'))).documentEndpoint]"
                        },
                        {
                            "name": "COSMOSDB_KEY",
                            "value": "[listKeys(variables('cosmosDbId'), '2016-03-31').primaryMasterKey]"
                        },
                        {
                            "name": "COSMOSDB_CONNECTION",
                            "value": "[concat('AccountEndpoint=https://', parameters('cosmosDbAccountName'), '.documents.azure.com:443/;AccountKey=', listKeys(variables('cosmosDbId'), '2016-03-31').primaryMasterKey, ';')]"
                        },
                        {
                            "name": "SCM_COMMAND_IDLE_TIMEOUT",
                            "value": "600"
                        }
                    ]
                }
            }
        }
    ]
}